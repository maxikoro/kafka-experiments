services:
  consumer1:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka-init

  consumer2:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka-init

  consumer3:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka-init

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka-init

  kafka-init:
    build:
      context: ./kafka-init
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy

  # kafka-init:
  #   image: bitnami/kafka
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "
  #     # blocks until kafka is reachable
  #     kafka-topics.sh --bootstrap-server kafka:9092 --list
  #     echo -e 'Creating Kafka topics'
  #     kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic topic1 --replication-factor 1 --partitions 2
  #     echo -e 'Successfully created the following topics:'
  #     kafka-topics.sh --bootstrap-server kafka:9092 --list
  #     "

  kafka:
    image: 'bitnami/kafka:latest'
    # ports:
    #   - '9092:9092'
    #   - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--version"] #"--bootstrap-server=localhost:9092", "--list"]
      interval: 30s
      timeout: 30s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8080:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      # - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka-init